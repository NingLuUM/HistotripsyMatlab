function ct = collapseTimeFinder(t,fs,path,sampleVec,npulses,svdOption,filterProps)
% collapseTimeFinder is a custom function built to allow for easier
% processing of the cavitation collapse time data for ACE-CT monitoring for
% histotripsy therapy during preliminary research studies.
%
% INPUTS:
%   t           = time vector
%   fs          = sampling frequency
%   path        = filepath to data
%   sampleVec   = vector of sample ID numbers
%   npulses     = number of pulses in the treatment
%   svdOption   = rank for svd background subtraction. Setting = 0 turns
%                   off this option (OPTIONAL)
%   filterProps = input values for gaussFilter() (OPTIONAL)
%
% OUTPUTS:
%   ct          = collapse time measurements (relative to expansion signal)
%
%
% University of Michigan - Image-Guided Ultrasound Therapy Laboratory
% J. Macoskey - 10.12.17

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%% THIS FUNCTION IS CURRENTLY INCOMPLETE %%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if nargin < 6
    filterProps = [6e6,1e6,1];
    svdOption = 0;
end

if nargin < 7
    filterProps = [6e6,1e6,1];
end

ct = zeros(npulses,length(sampleVec)); % collapse time output array
cnt = 1;
N = length(t);
f = [-N/2:N/2-1]./N.*fs;
for nf = sampleVec
    eval(sprintf('files = dir([path,''\\*%.1d*.mat'']);',nf))
    for nx = 1:npulses
        tmp = load([files(nx).folder,'\',files(nx).name]);
        data = tmp.C; % need to make this more robust
        
        % Here begins the core of the data analysis
        ftData = fftshift(fft(data));
        filt = gaussFilter(...
            filterProps(1),...
            filterProps(2),...
            f,...
            filterProps(3))';
        ftDataFilt = ftData.*filt;
        iftData = real(ifft(fftshift(ftDataFilt)));
        pltData = iftData./max(iftData);
        
        if svdOption
            [u,s,v] = svds(pltData,svdOption);
            dsvd = 
        else
            outData = pltData;
        end
        
        
    end
    
    
end